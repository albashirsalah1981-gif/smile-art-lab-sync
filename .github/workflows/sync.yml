name: Sync to Firebase Every Minute
on:
  schedule:
    - cron: '* * * * *'  # كل دقيقة
  workflow_dispatch:

jobs:
  sync-data:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install firebase-admin axios

      - name: Sync Cases Data
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          # إنشاء ملف JSON من Secret
          echo "$FIREBASE_SERVICE_ACCOUNT" > serviceAccountKey.json

          # تنفيذ الكود مباشرة
          node <<'EOF'
          const admin = require("firebase-admin");
          const axios = require("axios");
          const serviceAccount = require("./serviceAccountKey.json");

          admin.initializeApp({
            credential: admin.credential.cert(serviceAccount),
            databaseURL: "https://smile-art-lab-default-rtdb.europe-west1.firebasedatabase.app"
          });

          const db = admin.database();

          async function syncCases() {
            try {
              console.log("🔄 Fetching data from Google Script...");
              const response = await axios.get("https://script.google.com/macros/s/AKfycbwnhitq0HELiIr5FkOothi2q3V5YKyvl5aDcCpw__mDp3T238Ke350nFiQUlkIN_Ysz-A/exec?action=getCases");
              
              const data = response.data.data;
              console.log("🟢 Data fetched successfully");

              if (data && data.length) {
                await db.ref("cases").set(data);
                console.log("✅ Data uploaded to Firebase");

                const timestamp = new Date().toISOString();
                await db.ref("lastSync").set({ timestamp });
                console.log("✅ lastSync updated:", timestamp);
              } else {
                console.log("⚠️ No valid data found, skipping upload.");
              }
            } catch (err) {
              console.error("❌ Error:", err);
            }
          }

          // تشغيل المزامنة وإنهاء العملية بعد الانتهاء
          syncCases().then(() => process.exit(0));
          EOF
